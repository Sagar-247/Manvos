//MAnvos real time program 


#include <Wire.h>
#include "MAX30100_PulseOximeter.h"
#include<LiquidCrystal.h>
LiquidCrystal lcd(13, 12, 11, 10, 9, 8);
#define REPORTING_PERIOD_MS     1000

// PulseOximeter is the higher level interface to the sensor
// it offers:
//  * beat detection reporting
//  * heart rate calculation
//  * SpO2 (oxidation level) calculation
PulseOximeter pox;

uint8_t tempPin = 0;   //<---------This is the PIN the LM53 is connected! CHANGE accordingly
uint16_t val;
uint32_t tsLastReport = 0;

// Callback (registered below) fired when a pulse is detected
void onBeatDetected()
{
  Serial.println("Beat!");
}

void setup()
{
  Serial.begin(115200);

  Serial.print("Initializing pulse oximeter..");
  lcd.begin(16,2);
    lcd.print("Welcome E-ignite");
    delay(3000);
    lcd.print("Initialz prototype");
    delay(2000);
    lcd.clear();
  // Initialize the PulseOximeter instance
  // Failures are generally due to an improper I2C wiring, missing power supply
  // or wrong target chip
  if (!pox.begin()) {
    Serial.println("FAILED");
    for (;;);
  } else {
    Serial.println("SUCCESS");
  }

  // The default current for the IR LED is 50mA and it could be changed
  //   by uncommenting the following line. Check MAX30100_Registers.h for all the
  //   available options.
  // pox.setIRLedCurrent(MAX30100_LED_CURR_7_6MA);

  // Register a callback for the beat detection
  pox.setOnBeatDetectedCallback(onBeatDetected);
}

void loop()
{
  analogRead(tempPin);
  val = analogRead(tempPin);
  float t = (val*500)/1023;
  float cel = t;

  // Make sure to call update as fast as possible
  pox.update();

  // Asynchronously dump heart rate and oxidation levels to the serial
  // For both, a value of 0 means "invalid"
  if (millis() - tsLastReport > REPORTING_PERIOD_MS) {
    Serial.print("Heart rate:");
    Serial.print(pox.getHeartRate());
    Serial.print("bpm / SpO2:");
    Serial.print(pox.getSpO2());
    Serial.println("%");
    lcd.clear();

    
      lcd.setCursor(0,0);
    lcd.print("BPM : ");
    lcd.print(pox.getHeartRate());
        
    lcd.setCursor(8,0);
    
    lcd.print("SpO2: ");
    lcd.print(pox.getSpO2());
    lcd.print("%");

   
    Serial.print("TEMPRATURE = ");
    Serial.print(cel);
    Serial.print("*C");
        lcd.setCursor(0,1);
    lcd.print("in DegreeC= ");
    lcd.print(cel);
    Serial.println();

    /* uncomment this to get temperature in farenhite
      float farh = (cel*9)/5 + 32;
      Serial.print("TEMPRATURE = ");
      Serial.print(farh);
      Serial.print("*F");
      Serial.println();
    */

   
   
    
    tsLastReport = millis();
  }
}
